
#ifdef GAIDEN_MAGIC
	
	#include "GaidenMagic.lyn.event" // Compiled C.
	
	#include "SpellSystemASM.lyn.event" // Stuff not really suitable for C conversion.
	
	#include "GaidenSpellLists.event" // Go here to define per-character spell lists.
	
	#include "GaidenSpellTable.event" // Go here to define pointers to spell lists per character.
	
	ALIGN 4
	gGaidenMagicUMErrorText:
	SHORT GaidenMagicUMErrorText
	gGaidenMagicSpellMenuErrorText:
	SHORT GaidenMagicSpellMenuErrorText
	gGaidenMagicHPCostText:
	SHORT GaidenMagicHPCostText
	ALIGN 4
	gCan_Attack_Target:
	POIN Can_Attack_Target|1
	gGet_Item_Range:
	POIN Get_Item_Range|1
	gAll_Weapons_One_Square:
	POIN All_Weapons_One_Square|1
	gAll_Staffs_One_Square:
	POIN All_Staffs_One_Square|1
	gWrite_Range:
	POIN Write_Range|1
	
	PUSH
	ORG $2A774
	POIN SetUpBattleWeaponDataSwitchRepoint
	
	ORG $59B654
	POIN NewExitBattleForecast|1
	
	ORG $22C36
	SHORT 0x2502 // Have the Return_Range_Bitfield call use slot -2.
	POP
	
	ALIGN 4
	SetUpBattleWeaponDataSwitchRepoint:
	POIN 0x0802A79C // Item is in inventory.
	POIN 0x0802A79C
	POIN 0x0802A79C
	POIN 0x0802A79C
	POIN 0x0802A79C
	POIN 0x0802A7B0 // Item just added.
	POIN 0x0802A7CC // Arena attacker.
	POIN 0x0802A7EC // Arena defender.
	POIN 0x0802A80C // Ballista.
	POIN SetUpBattleWeaponDataForSpellMenu // For using a tome.
	
	// Temp until I get these functions written...
	
	#define MagicMenuCommand(optionNumber) "WORD $080D7CB8; SHORT 0; SHORT 0; BYTE 0 optionNumber 0 0; POIN (SpellUsability|1); POIN (SpellDrawingRoutine|1); POIN (SpellEffectRoutine|1); WORD 0; POIN (SpellOnHover|1); POIN (SpellOnUnhover|1)"
	#define MagicMenuCommandEnd "WORD 0 0 0 0 0 0 0 0 0"

	ALIGN 4
	SpellSelectMenuDefs:
	BYTE $01 $01 $0E $00
	WORD $0
	POIN MagicMenuCommandDefs
	WORD $0 $0 $0
	POIN MagicMenuBPress|1
	WORD $0804F521
	WORD $08024589

	MagicMenuCommandDefs:
		MagicMenuCommand($49)
		MagicMenuCommand($4A)
		MagicMenuCommand($4B)
		MagicMenuCommand($4C)
		MagicMenuCommand($4D)
	MagicMenuCommandEnd

	ALIGN 4
	NewGaidenSpellPopup:
	Popup_SetSound(0x5A)
	Popup_SetColor(0)
	Popup_StringPtr(GaidenPopupLearned)
	Popup_SetColor(2)
	Popup_ItemName
	Popup_Space(1)
	Popup_ItemIcon
	Popup_StringId(0x22) // .[X]
	Popup_End
	
	ALIGN 4
	GaidenPopupLearned:
	String("Learned ") ; BYTE 0

#endif // GAIDEN_MAGIC
